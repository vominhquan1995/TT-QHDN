// <auto-generated />
using HuRe.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HuRe.Migrations
{
    [DbContext(typeof(JobDbContext))]
    [Migration("20171230073327_Update301217")]
    partial class Update301217
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HuRe.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Avatar");

                    b.Property<string>("Class");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsActivated");

                    b.Property<string>("Lastname");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PasswordHashed");

                    b.Property<string>("PhoneNumber");

                    b.Property<long>("RoleId");

                    b.Property<long?>("RoleId1");

                    b.Property<bool>("Sex");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleId1");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HuRe.Models.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<long>("JobGroupId");

                    b.Property<long?>("JobGroupId1");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Representor");

                    b.Property<string>("Scales");

                    b.Property<string>("ShortName");

                    b.Property<string>("Status");

                    b.Property<string>("URLLogo");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("JobGroupId");

                    b.HasIndex("JobGroupId1");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("HuRe.Models.CV", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Experience");

                    b.Property<long>("JobGroupId");

                    b.Property<long?>("JobGroupId1");

                    b.Property<string>("Level");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Place");

                    b.Property<string>("Position");

                    b.Property<string>("Status");

                    b.Property<long>("WorkTypeId");

                    b.Property<long?>("WorkTypeId1");

                    b.HasKey("Id", "AccountId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("JobGroupId");

                    b.HasIndex("JobGroupId1");

                    b.HasIndex("WorkTypeId");

                    b.HasIndex("WorkTypeId1");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("HuRe.Models.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Place");

                    b.Property<string>("ShortDescription");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HuRe.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Age");

                    b.Property<string>("AppliedCount");

                    b.Property<string>("Benefit");

                    b.Property<string>("Certificate");

                    b.Property<long>("CompanyId");

                    b.Property<string>("ContactAddress");

                    b.Property<string>("ContactPhone");

                    b.Property<string>("Contactor");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeadlineApply");

                    b.Property<string>("Experience");

                    b.Property<decimal>("HighestSalary");

                    b.Property<decimal>("LowestSalary");

                    b.Property<string>("MajorTag");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("More");

                    b.Property<string>("Number");

                    b.Property<string>("Place");

                    b.Property<string>("Position");

                    b.Property<string>("Requirement");

                    b.Property<string>("Sex");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Status");

                    b.Property<string>("TimePre");

                    b.Property<string>("Title");

                    b.Property<string>("ViewCount");

                    b.Property<long>("WorkTypeId");

                    b.Property<long?>("WorkTypeId1");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("WorkTypeId");

                    b.HasIndex("WorkTypeId1");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HuRe.Models.JobGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("ImageURL");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.Property<string>("Status");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.ToTable("JobGroups");
                });

            modelBuilder.Entity("HuRe.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HuRe.Models.WorkType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.Property<string>("Status");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("HuRe.Models.Account", b =>
                {
                    b.HasOne("HuRe.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId1");
                });

            modelBuilder.Entity("HuRe.Models.Company", b =>
                {
                    b.HasOne("HuRe.Models.JobGroup", "JobGroup")
                        .WithMany()
                        .HasForeignKey("JobGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.JobGroup")
                        .WithMany("Companies")
                        .HasForeignKey("JobGroupId1");
                });

            modelBuilder.Entity("HuRe.Models.CV", b =>
                {
                    b.HasOne("HuRe.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.JobGroup", "JobGroup")
                        .WithMany()
                        .HasForeignKey("JobGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.JobGroup")
                        .WithMany("CVs")
                        .HasForeignKey("JobGroupId1");

                    b.HasOne("HuRe.Models.WorkType", "WorkType")
                        .WithMany()
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.WorkType")
                        .WithMany("CVs")
                        .HasForeignKey("WorkTypeId1");
                });

            modelBuilder.Entity("HuRe.Models.Job", b =>
                {
                    b.HasOne("HuRe.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.WorkType", "WorkType")
                        .WithMany()
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HuRe.Models.WorkType")
                        .WithMany("Jobs")
                        .HasForeignKey("WorkTypeId1");
                });
#pragma warning restore 612, 618
        }
    }
}
